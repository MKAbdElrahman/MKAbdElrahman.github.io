<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contextual Encoding on Mohamed Kamal</title>
    <link>http://localhost:1313/tags/contextual-encoding/</link>
    <description>Recent content in Contextual Encoding on Mohamed Kamal</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 03 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/contextual-encoding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding XSS Attacks and Contextual Encoding in Go</title>
      <link>http://localhost:1313/posts/xss/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/xss/</guid>
      <description>&lt;h2 id=&#34;xss-cross-site-scripting&#34;&gt;&#xA;  XSS (Cross-Site Scripting)&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#xss-cross-site-scripting&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;XSS is a critical security vulnerability that arises when a web application allows an attacker to inject malicious scripts into web pages, which are then viewed by other users. Contextual encoding serves as a crucial defense mechanism against XSS attacks. When user input is presented on a web page, it must undergo proper encoding to ensure that any potential script content is treated as data rather than executable code. This proactive measure helps thwart XSS attacks by guaranteeing that even if malicious code is injected, it will be displayed as plain text rather than executed by the browser.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
